% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/itertracer.R
\name{itertracer_callbacks_defaults}
\alias{itertracer_callbacks_defaults}
\alias{itertracer_callbacks}
\title{\link{tracer} Callback Functions}
\usage{
itertracer_callbacks_defaults()

itertracer_callbacks(
  sample_chains = NULL,
  on_init = NULL,
  param_order = NULL,
  on_iter_start = NULL,
  save_iter = NULL,
  on_iter_finish = NULL,
  break_if = NULL,
  on_chain_completion = NULL,
  on_sampling_completion = NULL,
  on_exit = NULL
)
}
\arguments{
\item{sample_chains}{function to go through the separate chains; e.g. an application of
\link[parallel:mclapply]{parallel::mclapply}}

\item{on_init}{called on initiation of \link{tracer}}

\item{param_order}{when stepping through parameters within an iteration, this function is called
to determine the order of the parameters}

\item{on_iter_start}{called on start of an iteration before anything else}

\item{save_iter}{called to save the result of an iteration}

\item{on_iter_finish}{called on finishing an iteration}

\item{break_if}{iterating is terminated when this function returns TRUE; you can e.g.
set a maximum time this way}

\item{on_chain_completion}{called when all the iterations have been completed in a chain}

\item{on_sampling_completion}{called when all chains have finished / have been interrupted}

\item{on_exit}{called on exit even when an error is raised by using \link{on.exit}}
}
\description{
Handle callback functions passed to \link{tracer}.
}
\details{
\itemize{
\item \code{itertracer_callbacks_defaults} returns a list of default callback functions
used by \link{tracer} when the user does not define custom callbacks
}

\itemize{
\item \code{itertracer_callbacks} accepts functions as arguments and returns a list
of callback functions to be used by \link{tracer}, supplemented by
defaults from \link{itertracer_callbacks_defaults} as necessary
}
}
